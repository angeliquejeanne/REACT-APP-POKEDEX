{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anggi\\\\Desktop\\\\REACT-POKEMONS-APP\\\\src\\\\components\\\\pokemon-form.tsx\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\nconst PokemonForm = ({\n  pokemon,\n  isEditForm\n}) => {\n  const history = useHistory();\n  const [form, setForm] = useState({\n    picture: {\n      value: pokemon.picture\n    },\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n\n    if (checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const validateForm = () => {\n    let newForm = form; // Validator url\n\n    if (isAddForm()) {\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg = 'L\\'url n\\'est pas valide.';\n        const newField = {\n          value: form.picture.value,\n          error: errorMsg,\n          isValid: false\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      } else {\n        const newField = {\n          value: form.picture.value,\n          error: '',\n          isValid: true\n        };\n        newForm = { ...newForm,\n          ...{\n            picture: newField\n          }\n        };\n      }\n    } // Validator name\n\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est requis (1-25).';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } // Validator hp\n\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } // Validator cp\n\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  };\n\n  const isTypesValid = type => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    } // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    } // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  const isAddForm = () => {\n    return !isEditForm;\n  };\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, isEditForm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"btn-floating halfway-fab waves-effect waves-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    onClick: deletePokemon,\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"delete\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, isAddForm() && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"picture\",\n    type: \"text\",\n    name: \"picture\",\n    className: \"form-control\",\n    value: form.picture.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }), form.picture.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 23\n    }\n  }, form.picture.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }), form.name.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, form.name.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }\n  }, \"Point de vie\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hp\",\n    type: \"number\",\n    name: \"hp\",\n    className: \"form-control\",\n    value: form.hp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }), form.hp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, form.hp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, \"D\\xE9g\\xE2ts\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cp\",\n    type: \"number\",\n    name: \"cp\",\n    className: \"form-control\",\n    value: form.cp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), form.cp.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, form.cp.error)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, \"Types\"), types.map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    name: \"types\",\n    className: \"filled-in\",\n    value: type,\n    checked: hasType(type),\n    disabled: !isTypesValid(type),\n    onChange: e => selectType(type, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 27\n    }\n  }, type))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["C:/Users/anggi/Desktop/REACT-POKEMONS-APP/src/components/pokemon-form.tsx"],"names":["React","useState","useHistory","formatType","PokemonService","PokemonForm","pokemon","isEditForm","history","form","setForm","picture","value","name","isValid","hp","cp","types","hasType","type","includes","selectType","e","checked","target","newField","newTypes","concat","filter","currentType","handleInputChange","fieldName","fieldValue","validateForm","newForm","isAddForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypesValid","length","handleSubmit","preventDefault","isFormValid","updatePokemon","addPokemon","deletePokemon","then","push","id","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm: boolean\r\n};\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  picture: Field,\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n}\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true }\r\n  });\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if(checked) {\r\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField }});\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator url\r\n    if(isAddForm()) {\r\n\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\r\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n    \r\n    // Cas n°1: Le pokémon a au moins 3 types.\r\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\r\n    if (form.types.value.length >= 3 && !hasType(type)) { \r\n      return false; \r\n    } \r\n    \r\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \r\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const isAddForm = (): boolean => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            {isEditForm && (\r\n            <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"picture\">Image</label>\r\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                    {/* error */}\r\n                    {form.picture.error &&\r\n                      <div className=\"card-panel red accent-1\"> \r\n                    {form.picture.error} \r\n                  </div>} \r\n                </div>\r\n                )}\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.name.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.name.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.hp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.hp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.cp.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.cp.error}\r\n                  </div>} \r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}